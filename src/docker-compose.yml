version: "3.9"
services:
  web:
    build: .
    entrypoint: ["flask", "run", "--host=0.0.0.0", "--port=5005"]
    container_name: web
    environment:
      LOGLEVEL: 'DEBUG'
      AUDIO_BUCKET: ${AUDIO_BUCKET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_REGION: ${AWS_REGION}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      OPENAI_KEY: ${OPENAI_KEY}
      SQLALCHEMY_DATABASE_URI: ${SQLALCHEMY_DATABASE_URI}
      SECRET_KEY: ${SECRET_KEY}
    ports:
      - "5000:5005"
    depends_on:
      api_intro_db:
        condition: service_healthy

  api_intro_db:
    image: postgres:15-alpine
    volumes:
      - ./postgres-data:/var/lib/postgresql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 30s
      retries: 6
    restart: always
